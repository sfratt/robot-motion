plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the jacoco plugin to add support for code coverage
    id 'jacoco'
    
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    // Use Mockito for mocking.
    // testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'org.mockito:mockito-inline:4.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'
}

jacoco {
    toolVersion = "0.8.7"
}

test {
    failFast = true
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacoco')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                "ca/concordia/**/App.class",
            ])
        }))
    }
}

application {
    // Define the main class for the application.
    mainClass = 'ca.concordia.encs.robot_motion.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

run {
    standardInput = System.in
}
